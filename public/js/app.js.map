{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/contract.js","js/directives/dragDrop.js","js/directives/googleMap.js","js/controllers/main.js","js/models/mubee.js","js/controllers/mubees.js","js/models/payment.js","js/controllers/payments.js","js/models/review.js","js/router.js","js/controllers/search.js","js/models/skill.js","js/directives/starRating.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Contract","$resource","id","update","method","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","googleplace","$window","require","location","lat","lng","attrs","model","options","types","componentRestrictions","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","latLng","geometry","toJSON","$setViewValue","val","MainController","$rootScope","$http","toggleMenu","main","menuVisible","logout","localStorage","removeItem","secureState","toState","toParams","isAuthenticated","currentUserId","getPayload","protectedStates","includes","name","parseFloat","isLoggedIn","$on","Mubee","MubeesCreateController","createMubee","save","mubeesCreate","mubee","crew_id","params","crewId","contracts","query","create","MubeesShowController","Review","acceptRequest","console","log","mubeesShow","accepted","$update","isCurrentMubee","Number","createReview","review","sender","recipient","review_recipient_role","mubee_id","get","$promise","isOwnProfile","crew","MubeesEditController","mubeesEdit","deleteMubee","$remove","delete","Payment","PaymentsController","saveCustomer","status","response","post","stripeToken","paymentsShow","stripeCustomer","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","SearchController","Skill","filterUsers","search","querySkills","skill_ids","map","skill","latitude","longitude","skills","RatingController","rating1","rating2","isReadonly","rateFunction","rating","starRating","template","ratingValue","max","onRatingSelect","readonly","attributes","updateStars","stars","i","push","filled","undefined","toggle","index","$watch","oldValue","newValue","User","UsersIndexController","usersIndex","showForm","all","UsersShowController","usersShow","isCurrentUser","producer_id","UsersEditController","addSkills","usersEdit","UsersDashboardController","usersDashboard","angular","module","constant","window","hostname","config","Stripe","setPublishableKey","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'stripe', 'satellizer', 'ui.select', 'ngSanitize', 'uiSwitch','ngHamburger'])\n  .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : 'https://mubee.herokuapp.com/api')\n  .config(Auth)\n  .config(\n    function() {\n      Stripe.setPublishableKey('pk_test_2DNYpLVI6IGvyQ26xOMwISkq');\n    }\n  );\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n  $authProvider.facebook({\n    clientId: '283342332068635'\n  });\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersDashboard');\n      });\n  }\n//   function authenticate(service) {\n//     $auth.authenticate(service, () => {\n//       $state.go('filmsIndex');\n//     });\n//   }\n//\n//   login.authenticate = authenticate;\n//\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .factory('Contract', Contract);\n\nContract.$inject = ['$resource', 'API_URL'];\nfunction Contract($resource, API_URL) {\n  return new $resource(`${API_URL}/contracts/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n      .on('dragover', () => {\n        $scope.active = true;\n        $scope.$apply();\n      })\n       .on('dragover', (e) => {\n         e.preventDefault();\n       })\n       .on('dragleave', () => {\n         $scope.active = false;\n         $scope.$apply();\n       })\n       .on('drop', (e)  => {\n         e.preventDefault();\n         const file = (e.target.files || e.dataTransfer.files)[0];\n\n         reader.readAsDataURL(file);\n       });\n    }\n  };\n}\n","angular.module('finalProject')\n .directive('googleplace', googleplace);\n\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n return {\n   restrict: 'A',\n   require: 'ngModel',\n   scope: {\n     location: '=',\n     lat: '=',\n     lng: '='\n   },\n   link: function(scope, element, attrs, model) {\n     const options = {\n       types: [],\n       componentRestrictions: {}\n     };\n\n     const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n     autocomplete.addListener('place_changed', () => {\n       const place = autocomplete.getPlace();\n       const latLng = place.geometry.location.toJSON();\n       scope.lat = latLng.lat;\n       scope.lng = latLng.lng;\n       model.$setViewValue(element.val());\n     });\n   }\n };\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$rootScope', '$auth', '$state','$http'];\nfunction MainController($rootScope, $auth, $state, $http) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  //  main.message = null;\n  main.menuVisible = false;\n\n\n  function toggleMenu() {\n    main.menuVisible = !main.menuVisible;\n  }\n\n  function logout() {\n    $auth.logout()\n     .then(() => {\n       localStorage.removeItem('userId');\n       $state.go('splash');\n     });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if($auth.isAuthenticated()) {\n      main.currentUserId = $auth.getPayload().id;\n    }\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n  main.toggleMenu = toggleMenu;\n}\n\n\n\n//\n// MainController.$inject = ['$auth', '$state', '$rootScope', '$http'];\n// function MainController($auth, $state, $rootScope, $http) {\n//   const main = this;\n//   main.isLoggedIn = $auth.isAuthenticated;\n//   main.message = null;\n//   main.menuVisible = false;\n//\n//   function toggleMenu() {\n//     main.menuVisible = !main.menuVisible;\n//   }\n//\n//   function logout() {\n//     $auth.logout()\n//     .then(() => {\n//       localStorage.removeItem('userId');\n//       $state.go('splash');\n//     });\n//   }\n//\n//   const protectedStates = ['profile','groupProfile','profileEdit','groupEdit'];\n//\n//   function secureState(e, toState) {\n//     main.menuVisible = false;\n//     main.message = null;\n//     if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n//       e.preventDefault();\n//       $state.go('login');\n//       main.message = 'You must be logged in to go there!';\n//     }\n//\n//   }\n//\n//   $rootScope.$on('$stateChangeStart', secureState);\n//\n//   main.logout = logout;\n//   main.toggleMenu = toggleMenu;\n//\n//\n// }\n","angular.module('finalProject')\n  .factory('Mubee', Mubee);\n\nMubee.$inject = ['$resource', 'API_URL'];\nfunction Mubee($resource, API_URL) {\n  return new $resource(`${API_URL}/mubees/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('MubeesEditController', MubeesEditController)\n  .controller('MubeesShowController', MubeesShowController)\n  .controller('MubeesCreateController', MubeesCreateController);\n\nMubeesCreateController.$inject = ['Mubee', '$state', 'Contract'];\nfunction MubeesCreateController(Mubee, $state, Contract) {\n  const mubeesCreate = this;\n\n  mubeesCreate.mubee = {\n    crew_id: $state.params.crewId\n  };\n\n  mubeesCreate.contracts = Contract.query();\n\n  function createMubee() {\n    Mubee.save(mubeesCreate.mubee, () => {\n      $state.go('usersDashboard');\n    });\n  }\n\n  mubeesCreate.create = createMubee;\n}\n\n\nMubeesShowController.$inject = ['Mubee', 'Review', '$state', '$auth'];\nfunction MubeesShowController(Mubee, Review, $state, $auth) {\n  const mubeesShow = this;\n\n  function acceptRequest() {\n    console.log('clicked');\n    mubeesShow.mubee.accepted = true;\n    mubeesShow.mubee.$update(() => {\n      $state.go('usersDashboard');\n    });\n  }\n  mubeesShow.currentUserId = $auth.getPayload().id;\n\n  mubeesShow.mubee = Mubee.get($state.params);\n\n  mubeesShow.mubee.$promise.then(function(mubee) {\n    mubeesShow.isOwnProfile = (mubeesShow.currentUserId ===  mubee.crew.id);\n  });\n\n  function isCurrentMubee() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  mubeesShow.isCurrentMubee = isCurrentMubee;\n  // mubeesShow.isOwnProfile = isOwnProfile;\n\n  mubeesShow.acceptRequest = acceptRequest;\n\n  function createReview() {\n    const currentUserId = $auth.getPayload().id;\n\n    mubeesShow.review.sender = currentUserId;\n    mubeesShow.review.recipient = mubeesShow.mubee[mubeesShow.mubee.review_recipient_role].id;\n    mubeesShow.review.mubee_id = mubeesShow.mubee.id;\n\n    console.log(mubeesShow.review);\n    Review.save(mubeesShow.review, () => {\n      $state.go('usersShow', {id: mubeesShow.review.recipient });\n    });\n  }\n\n  mubeesShow.createReview = createReview;\n}\n\nMubeesEditController.$inject = ['Mubee', '$state', 'Contract'];\nfunction MubeesEditController(Mubee, $state, Contract) {\n  const mubeesEdit = this;\n\n  mubeesEdit.mubee = Mubee.get($state.params);\n  mubeesEdit.contracts = Contract.query();\n\n  function update() {\n    mubeesEdit.mubee.$update(() => {\n      $state.go('mubeesShow', { id: mubeesEdit.mubee.id });\n    });\n  }\n  function deleteMubee() {\n    mubeesEdit.mubee.$remove(() => {\n      $state.go('usersDashboard');\n    });\n  }\n  this.delete = deleteMubee;\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('Payment', Payment);\n\nPayment.$inject = ['$resource', 'API_URL'];\nfunction Payment($resource, API_URL) {\n  return new $resource(`${API_URL}/charges`);\n}\n","angular.module('finalProject')\n.controller('PaymentsController', PaymentsController);\n\n\nPaymentsController.$inject = ['Payment', '$state', '$http', '$scope'];\n\nfunction PaymentsController(Payment, $state, $http, $scope) {\n  $scope.saveCustomer = function (status, response) {\n    $http.post('http://localhost:3000/api/charges', { stripeToken: response.id });\n  };\n\n  const paymentsShow = this;\n\n  paymentsShow.stripeCustomer = Payment.get({});\n}\n","angular.module('finalProject')\n  .factory('Review', Review);\n\nReview.$inject = ['$resource', 'API_URL'];\nfunction Review($resource, API_URL) {\n  return new $resource(`${API_URL}/reviews/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('splash', {\n      url: '/',\n      templateUrl: '/templates/splash.html',\n      controller: 'LoginController as login'\n    })\n    .state('search', {\n      url: '/search',\n      templateUrl: '/templates/search.html',\n      controller: 'SearchController as search'\n    })\n    .state('usersIndex', {\n      url: '/users?skill_ids&latitude&longitude',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersDashboard', {\n      url: '/dashboard',\n      templateUrl: '/templates/dashboard.html',\n      controller: 'UsersDashboardController as usersDashboard'\n    })\n    .state('payments', {\n      url: '/payments',\n      templateUrl: '/templates/stripe.html',\n      controller: 'PaymentsController as payments'\n    })\n    // .state('Search', {\n    //   url: '/search',\n    //   templateUrl: '/templates/search.html',\n    //   controller: 'UsersSearchController as Search'\n    // })\n    .state('mubeesCreate', {\n      url: '/mubees?crewId',\n      templateUrl: '/templates/mubeesCreate.html',\n      controller: 'MubeesCreateController as mubeesCreate'\n    })\n    .state('mubeesShow', {\n      url: '/mubees/:id',\n      templateUrl: '/templates/mubeesShow.html',\n      controller: 'MubeesShowController as mubeesShow'\n    })\n    .state('mubeesEdit', {\n      url: '/mubees/:id/edit',\n      templateUrl: '/templates/mubeesEdit.html',\n      controller: 'MubeesEditController as mubeesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .controller('SearchController', SearchController);\n\nSearchController.$inject = ['Skill', '$state'];\nfunction SearchController(Skill, $state) {\n  const search = this;\n\n  search.skills = Skill.query();\n\n  function filterUsers() {\n    const params = {};\n\n    if(search.querySkills) {\n      const skill_ids = search.querySkills.map((skill) => {\n        return skill.id;\n      });\n\n      params.skill_ids = skill_ids;\n    }\n\n    if(search.location) {\n      params.latitude = search.lat;\n      params.longitude = search.lng;\n    }\n\n    $state.go('usersIndex', params);\n  }\n\n  search.filterUsers = filterUsers;\n}\n","angular.module('finalProject')\n  .factory('Skill', Skill);\n\nSkill.$inject = ['$resource', 'API_URL'];\nfunction Skill($resource, API_URL) {\n  return new $resource(`${API_URL}/skills/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","//\n// (function() {\n//   'use strict';\n//\n//   angular\n//     .module('app', [])\n//     .controller('RatingController', RatingController)\n//     .directive('starRating', starRating);\n//\n//   function RatingController() {\n//     this.rating1 = 5;\n//     this.rating2 = 2;\n//     this.isReadonly = true;\n//     this.rateFunction = function(rating) {\n//       console.log('Rating selected: ' + rating);\n//     };\n//   }\n\nangular.module('finalProject')\n.directive('starRating', starRating)\n.controller('RatingController', RatingController);\n\nfunction RatingController() {\n  this.rating1 = 5;\n  this.rating2 = 2;\n  this.isReadonly = true;\n  this.rateFunction = function(rating) {\n    console.log('Rating selected: ' + rating);\n  };\n}\n\n\nstarRating.$inject = ['$window'];\nfunction starRating() {\n  return {\n    restrict: 'EA',\n    template:\n      '<ul class=\"star-rating\" ng-class=\"{readonly: readonly}\">' +\n      '  <li ng-repeat=\"star in stars\" class=\"star\" ng-class=\"{filled: star.filled}\" ng-click=\"toggle($index)\">' +\n      '    <i class=\"fa fa-star\"></i>' + // or &#9733\n      '  </li>' +\n      '</ul>',\n    scope: {\n      ratingValue: '=ngModel',\n      max: '=?', // optional (default is 5)\n      onRatingSelect: '&?',\n      readonly: '=?'\n    },\n    link: function(scope, element, attributes) {\n      if (scope.max === undefined) {\n        scope.max = 5;\n      }\n      function updateStars() {\n        scope.stars = [];\n        for (var i = 0; i < scope.max; i++) {\n          scope.stars.push({\n            filled: i < scope.ratingValue\n          });\n        }\n      }\n      scope.toggle = function(index) {\n        if (scope.readonly === undefined || scope.readonly === false){\n          scope.ratingValue = index + 1;\n          scope.onRatingSelect({\n            rating: index + 1\n          });\n        }\n      };\n      scope.$watch('ratingValue', function(oldValue, newValue) {\n        if (newValue) {\n          updateStars();\n        }\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UsersDashboardController', UsersDashboardController);\n\n\nUsersIndexController.$inject = ['User','Skill', '$state'];\nfunction UsersIndexController(User, Skill, $state) {\n  const usersIndex = this;\n\n  usersIndex.showForm = true;\n  usersIndex.params = {};\n\n  let params = {};\n\n  if($state.params.skill_ids || $state.params.location) {\n    usersIndex.showForm = false;\n    params = $state.params;\n    params['skill_ids[]'] = $state.params.skill_ids;\n    delete params.skill_ids;\n  }\n\n  usersIndex.all = User.query(params);\n\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth','Review'];\nfunction UsersShowController(User, $state, $auth, Review) {\n  const usersShow = this;\n  usersShow.review = {};\n\n  if($auth.isAuthenticated()) {\n    usersShow.currentUserId = $auth.getPayload().id;\n  }\n\n  function isOwnProfile() {\n    return usersShow.currentUserId === usersShow.user.id;\n  }\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  function createReview() {\n    usersShow.review.producer_id = usersShow.currentUserId;\n    usersShow.review.crew_id = $state.params.id;\n    Review.save(usersShow.review, () => {\n      usersShow.user = User.get($state.params);\n    });\n  }\n\n  usersShow.createReview = createReview;\n\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.isOwnProfile = isOwnProfile;\n\n\n  usersShow.user = User.get($state.params);\n}\n\nUsersEditController.$inject = ['User', '$state', '$auth', 'Skill'];\nfunction UsersEditController(User, $state, $auth, Skill) {\n  const usersEdit = this;\n\n  usersEdit.skills = Skill.query();\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersEdit.isCurrentUser = isCurrentUser;\n\n  usersEdit.user = User.get($state.params);\n\n  function addSkills() {\n    const skill_ids = usersEdit.querySkills.map((skill) => {\n      return skill.id;\n    });\n    usersEdit.user.skill_ids = skill_ids;\n  }\n\n  usersEdit.addSkills = addSkills;\n\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n\n\nUsersDashboardController.$inject = ['User', '$state', '$auth', '$http'];\nfunction UsersDashboardController(User, $state, $auth, $http) {\n  const usersDashboard = this;\n  const currentUserId = $auth.getPayload().id;\n\n  usersDashboard.user = User.get({id: currentUserId});\n\n}\n"]}