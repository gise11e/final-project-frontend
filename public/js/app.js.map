{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/contract.js","js/directives/dragDrop.js","js/directives/googleMap.js","js/controllers/main.js","js/models/mubee.js","js/controllers/mubees.js","js/models/review.js","js/router.js","js/models/skill.js","js/directives/starRating.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Contract","$resource","id","update","method","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","googleplace","$window","require","location","lat","lng","attrs","model","options","types","componentRestrictions","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","latLng","geometry","toJSON","$setViewValue","val","MainController","$rootScope","$http","toggleMenu","main","menuVisible","logout","localStorage","removeItem","secureState","toState","toParams","isAuthenticated","currentUserId","getPayload","protectedStates","includes","name","parseFloat","isLoggedIn","$on","Mubee","MubeesCreateController","createMubee","save","mubeesCreate","mubee","crew_id","params","crewId","contracts","query","create","MubeesShowController","Review","acceptRequest","console","log","mubeesShow","accepted","$update","isCurrentMubee","Number","createReview","review","sender","recipient","review_recipient_role","mubee_id","get","MubeesEditController","mubeesEdit","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","Skill","RatingController","rating1","rating2","isReadonly","rateFunction","rating","starRating","template","ratingValue","max","onRatingSelect","readonly","attributes","updateStars","stars","i","push","filled","undefined","toggle","index","$watch","oldValue","newValue","User","UsersIndexController","filterUsers","usersIndex","querySkills","skill_ids","map","skill","all","showForm","skills","UsersShowController","isCurrentUser","usersShow","producer_id","UsersEditController","addSkills","usersEdit","UsersDashboardController","usersDashboard","angular","module","constant","config","Stripe","setPublishableKey","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'stripe', 'satellizer', 'ui.select', 'ngSanitize', 'uiSwitch','ngHamburger'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth)\n  .config(\n    function() {\n      Stripe.setPublishableKey('pk_test_2DNYpLVI6IGvyQ26xOMwISkq');\n    }\n  );\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n  $authProvider.facebook({\n    clientId: '283342332068635'\n  });\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersDashboard');\n      });\n  }\n//   function authenticate(service) {\n//     $auth.authenticate(service, () => {\n//       $state.go('filmsIndex');\n//     });\n//   }\n//\n//   login.authenticate = authenticate;\n//\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .factory('Contract', Contract);\n\nContract.$inject = ['$resource', 'API_URL'];\nfunction Contract($resource, API_URL) {\n  return new $resource(`${API_URL}/contracts/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n      .on('dragover', () => {\n        $scope.active = true;\n        $scope.$apply();\n      })\n       .on('dragover', (e) => {\n         e.preventDefault();\n       })\n       .on('dragleave', () => {\n         $scope.active = false;\n         $scope.$apply();\n       })\n       .on('drop', (e)  => {\n         e.preventDefault();\n         const file = (e.target.files || e.dataTransfer.files)[0];\n\n         reader.readAsDataURL(file);\n       });\n    }\n  };\n}\n","angular.module('finalProject')\n .directive('googleplace', googleplace);\n\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n return {\n   restrict: 'A',\n   require: 'ngModel',\n   scope: {\n     location: '=',\n     lat: '=',\n     lng: '='\n   },\n   link: function(scope, element, attrs, model) {\n     const options = {\n       types: [],\n       componentRestrictions: {}\n     };\n\n     const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n     autocomplete.addListener('place_changed', () => {\n       const place = autocomplete.getPlace();\n       const latLng = place.geometry.location.toJSON();\n       scope.lat = latLng.lat;\n       scope.lng = latLng.lng;\n       model.$setViewValue(element.val());\n     });\n   }\n };\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$rootScope', '$auth', '$state','$http'];\nfunction MainController($rootScope, $auth, $state, $http) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  //  main.message = null;\n  main.menuVisible = false;\n\n\n  function toggleMenu() {\n    main.menuVisible = !main.menuVisible;\n  }\n\n  function logout() {\n    $auth.logout()\n     .then(() => {\n       localStorage.removeItem('userId');\n       $state.go('splash');\n     });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if($auth.isAuthenticated()) {\n      main.currentUserId = $auth.getPayload().id;\n    }\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n  main.toggleMenu = toggleMenu;\n}\n\n\n\n//\n// MainController.$inject = ['$auth', '$state', '$rootScope', '$http'];\n// function MainController($auth, $state, $rootScope, $http) {\n//   const main = this;\n//   main.isLoggedIn = $auth.isAuthenticated;\n//   main.message = null;\n//   main.menuVisible = false;\n//\n//   function toggleMenu() {\n//     main.menuVisible = !main.menuVisible;\n//   }\n//\n//   function logout() {\n//     $auth.logout()\n//     .then(() => {\n//       localStorage.removeItem('userId');\n//       $state.go('splash');\n//     });\n//   }\n//\n//   const protectedStates = ['profile','groupProfile','profileEdit','groupEdit'];\n//\n//   function secureState(e, toState) {\n//     main.menuVisible = false;\n//     main.message = null;\n//     if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n//       e.preventDefault();\n//       $state.go('login');\n//       main.message = 'You must be logged in to go there!';\n//     }\n//\n//   }\n//\n//   $rootScope.$on('$stateChangeStart', secureState);\n//\n//   main.logout = logout;\n//   main.toggleMenu = toggleMenu;\n//\n//\n// }\n","angular.module('finalProject')\n  .factory('Mubee', Mubee);\n\nMubee.$inject = ['$resource', 'API_URL'];\nfunction Mubee($resource, API_URL) {\n  return new $resource(`${API_URL}/mubees/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('MubeesEditController', MubeesEditController)\n  .controller('MubeesShowController', MubeesShowController)\n  .controller('MubeesCreateController', MubeesCreateController);\n\nMubeesCreateController.$inject = ['Mubee', '$state', 'Contract'];\nfunction MubeesCreateController(Mubee, $state, Contract) {\n  const mubeesCreate = this;\n\n  mubeesCreate.mubee = {\n    crew_id: $state.params.crewId\n  };\n\n  mubeesCreate.contracts = Contract.query();\n\n  function createMubee() {\n    Mubee.save(mubeesCreate.mubee, () => {\n      $state.go('usersDashboard');\n    });\n  }\n\n  mubeesCreate.create = createMubee;\n}\n\n\nMubeesShowController.$inject = ['Mubee', 'Review', '$state', '$auth'];\nfunction MubeesShowController(Mubee, Review, $state, $auth) {\n  const mubeesShow = this;\n\n  function acceptRequest() {\n    console.log('clicked');\n    mubeesShow.mubee.accepted = true;\n    mubeesShow.mubee.$update(() => {\n      $state.go('usersDashboard');\n    });\n  }\n\n  function isCurrentMubee() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  mubeesShow.isCurrentMubee = isCurrentMubee;\n  mubeesShow.acceptRequest = acceptRequest;\n\n  mubeesShow.mubee = Mubee.get($state.params);\n\n  function createReview() {\n    const currentUserId = $auth.getPayload().id;\n\n    mubeesShow.review.sender = currentUserId;\n    mubeesShow.review.recipient = mubeesShow.mubee[mubeesShow.mubee.review_recipient_role].id;\n    mubeesShow.review.mubee_id = mubeesShow.mubee.id;\n\n    console.log(mubeesShow.review);\n    Review.save(mubeesShow.review, () => {\n      // $state.go('usersShow', {id: });\n    });\n  }\n\n  mubeesShow.createReview = createReview;\n}\n\n\nMubeesEditController.$inject = ['Mubee', '$state'];\nfunction MubeesEditController(Mubee, $state) {\n  const mubeesEdit = this;\n\n  mubeesEdit.mubee = Mubee.get($state.params);\n\n  function update() {\n    mubeesEdit.mubee.$update(() => {\n      $state.go('mubeesShow', $state.params);\n\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('Review', Review);\n\nReview.$inject = ['$resource', 'API_URL'];\nfunction Review($resource, API_URL) {\n  return new $resource(`${API_URL}/reviews/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('splash', {\n      url: '/',\n      templateUrl: '/templates/splash.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersDashboard', {\n      url: '/dashboard',\n      templateUrl: '/templates/dashboard.html',\n      controller: 'UsersDashboardController as usersDashboard'\n    })\n    .state('payments', {\n      url: '/dashboard',\n      templateUrl: '/templates/stripe.html',\n      controller: 'PaymentsController as payments'\n    })\n    // .state('Search', {\n    //   url: '/search',\n    //   templateUrl: '/templates/search.html',\n    //   controller: 'UsersSearchController as Search'\n    // })\n    .state('mubeesCreate', {\n      url: '/mubees?crewId',\n      templateUrl: '/templates/mubeesCreate.html',\n      controller: 'MubeesCreateController as mubeesCreate'\n    })\n    .state('mubeesShow', {\n      url: '/mubees/:id',\n      templateUrl: '/templates/mubeesShow.html',\n      controller: 'MubeesShowController as mubeesShow'\n    })\n    .state('mubeesEdit', {\n      url: '/mubees/:id/edit',\n      templateUrl: '/templates/mubeesEdit.html',\n      controller: 'MubeesEditController as mubeesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .factory('Skill', Skill);\n\nSkill.$inject = ['$resource', 'API_URL'];\nfunction Skill($resource, API_URL) {\n  return new $resource(`${API_URL}/skills/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","//\n// (function() {\n//   'use strict';\n//\n//   angular\n//     .module('app', [])\n//     .controller('RatingController', RatingController)\n//     .directive('starRating', starRating);\n//\n//   function RatingController() {\n//     this.rating1 = 5;\n//     this.rating2 = 2;\n//     this.isReadonly = true;\n//     this.rateFunction = function(rating) {\n//       console.log('Rating selected: ' + rating);\n//     };\n//   }\n\nangular.module('finalProject')\n.directive('starRating', starRating)\n.controller('RatingController', RatingController);\n\nfunction RatingController() {\n  this.rating1 = 5;\n  this.rating2 = 2;\n  this.isReadonly = true;\n  this.rateFunction = function(rating) {\n    console.log('Rating selected: ' + rating);\n  };\n}\n\n\nstarRating.$inject = ['$window'];\nfunction starRating() {\n  return {\n    restrict: 'EA',\n    template:\n      '<ul class=\"star-rating\" ng-class=\"{readonly: readonly}\">' +\n      '  <li ng-repeat=\"star in stars\" class=\"star\" ng-class=\"{filled: star.filled}\" ng-click=\"toggle($index)\">' +\n      '    <i class=\"fa fa-star\"></i>' + // or &#9733\n      '  </li>' +\n      '</ul>',\n    scope: {\n      ratingValue: '=ngModel',\n      max: '=?', // optional (default is 5)\n      onRatingSelect: '&?',\n      readonly: '=?'\n    },\n    link: function(scope, element, attributes) {\n      if (scope.max === undefined) {\n        scope.max = 5;\n      }\n      function updateStars() {\n        scope.stars = [];\n        for (var i = 0; i < scope.max; i++) {\n          scope.stars.push({\n            filled: i < scope.ratingValue\n          });\n        }\n      }\n      scope.toggle = function(index) {\n        if (scope.readonly === undefined || scope.readonly === false){\n          scope.ratingValue = index + 1;\n          scope.onRatingSelect({\n            rating: index + 1\n          });\n        }\n      };\n      scope.$watch('ratingValue', function(oldValue, newValue) {\n        if (newValue) {\n          updateStars();\n        }\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('UsersDashboardController', UsersDashboardController);\n\n\nUsersIndexController.$inject = ['User','Skill'];\nfunction UsersIndexController(User, Skill) {\n  const usersIndex = this;\n\n  usersIndex.skills = Skill.query();\n\n  usersIndex.showForm = true;\n  usersIndex.params = {};\n  function filterUsers() {\n    if(usersIndex.querySkills) {\n      const skill_ids = usersIndex.querySkills.map((skill) => {\n        return skill.id;\n      });\n\n      usersIndex.params['skill_ids[]'] = skill_ids;\n    }\n\n    usersIndex.all = User.query(usersIndex.params);\n    usersIndex.showForm = false;\n  }\n\n  usersIndex.filterUsers = filterUsers;\n\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth','Review'];\nfunction UsersShowController(User, $state, $auth, Review) {\n  const usersShow = this;\n  usersShow.review = {};\n\n  if($auth.isAuthenticated()) {\n    usersShow.currentUserId = $auth.getPayload().id;\n  }\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  function createReview() {\n    usersShow.review.producer_id = usersShow.currentUserId;\n    usersShow.review.crew_id = $state.params.id;\n    Review.save(usersShow.review, () => {\n      usersShow.user = User.get($state.params);\n    });\n  }\n\n  usersShow.createReview = createReview;\n\n  usersShow.isCurrentUser = isCurrentUser;\n\n  usersShow.user = User.get($state.params);\n}\n\nUsersEditController.$inject = ['User', '$state', '$auth', 'Skill'];\nfunction UsersEditController(User, $state, $auth, Skill) {\n  const usersEdit = this;\n\n  usersEdit.skills = Skill.query();\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersEdit.isCurrentUser = isCurrentUser;\n\n  usersEdit.user = User.get($state.params);\n\n  function addSkills() {\n    const skill_ids = usersEdit.querySkills.map((skill) => {\n      return skill.id;\n    });\n    usersEdit.user.skill_ids = skill_ids;\n  }\n\n  usersEdit.addSkills = addSkills;\n\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n\n\nUsersDashboardController.$inject = ['User', '$state', '$auth', '$http'];\nfunction UsersDashboardController(User, $state, $auth, $http) {\n  const usersDashboard = this;\n  const currentUserId = $auth.getPayload().id;\n\n  usersDashboard.user = User.get({id: currentUserId});\n\n\n  // const token = `Bearer ${$auth.getToken()}`;\n  //\n  // const req = {\n  //   method: 'GET',\n  //   url: 'http://localhost:3000/api/dashboard',\n  //   headers: { authorizaton: token }\n  // };\n  // $http(req).then((response) => {\n  //   usersDashboard.user = response.data.user;\n  //   usersDashboard.mubees = response.data.mubees;\n  // });\n\n}\n"]}